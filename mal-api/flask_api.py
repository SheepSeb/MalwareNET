from flask import Flask, jsonify, request
import numpy as np
import tensorflow as tf
from flask_cors import CORS
from matplotlib import pyplot as plt
import PIL

app = Flask(__name__)
CORS(app)

@app.route('/predict', methods=['GET', 'POST'])
def predict():
    # Get the data from the POST request.
    data_json = request.get_json(force=True)
    data_json = data_json.split('\n')
    data_json = [i.split()[1:] for i in data_json]
    data_json = [' '.join(i) for i in data_json]
    
    data_json = [i.replace('??', '00') for i in data_json]
    img_file = []
    for line in data_json:
        for word in line.split():
            # Convert the hexadecimal value to decimal
            img_file.append(int(word, 16))
            
    if len(img_file) < 256*256:
        img_file.extend([0] * (256*256 - len(img_file)))
        
    img_file = np.array(img_file[:256*256])
    img_file = img_file.reshape(256, 256)

    # Save the image
    plt.imsave('test/1/tmp.png', img_file, cmap='gray')
    img = PIL.Image.open('test/1/tmp.png')
    img.save('test/1/tmp.png', 'PNG')
    
    test_ds = tf.keras.preprocessing.image_dataset_from_directory(
        'test',
        image_size=(128, 128),
        batch_size=1)

    # Load the model
    model = tf.keras.models.load_model('last-model/mymodel',custom_objects=None,compile=True)
    predictions = model.predict(test_ds)
    # Return the prediction class using the hash table
    
    classes_name = ['Gatak',
                    'Kelihos_ver1',
                    'Kelihos_ver3',
                    'Lolipop',
                    'Obfuscator.ACY',
                    'Ramnit',
                    'Simda',
                    'Tracur',
                    'Vundo']
    
    # Get the class with the highest probability
    print(classes_name[np.argmax(predictions[0])])
    # Send response to the client
    response = {
        'prediction': {
            'class': classes_name[np.argmax(predictions[0])],
            'probability': str(predictions[0][np.argmax(predictions[0])])
        }
    }
    
    return jsonify(response)

@app.route('/hello/', methods=['GET', 'POST'])
def welcome():
    return "Hello World!"

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=105)